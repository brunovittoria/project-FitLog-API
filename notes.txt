/################# BACKEND #################\

rodar: 

npm run dev

#1 CONFIGURACAO INICIAL

COMMANDS USED:

npm init -y
npm install typescript --save-dev
npm i express
npm install @types/express --save-dev
npx tsc --init
npm i cors cookie-parser dotenv jsonwebtoken morgan nodemon bcrypt
npm i ts-node-dev typescript --save-dev   //Serve pro TS entender nossos imports


Agora vamos criar o script pra rodar nosso projeto:

  "scripts": {
    "dev": "ts-node-dev --transpile-only src/server.ts",
    "test": "echo \"Error: no test specified\" && exit 1"
  },

Agora testamos nossas rotas e td funciona


##########################################

#2 TRATANDO ERROS DA API

Usar dep:

npm i express-async-errors

Criamos o file routes.ts
Criamos o file server.ts onde tratamos os erros e testamos as rotas

Instalaçao e configuraçao do cors como typagem TS:
npm i @types/cors --save-dev


##########################################

#3 CONECTANDO AO DB

Agora iremos conectar o postgreSQL + BEEKEEPER + PRISMA

Rodamos o cmd no diretorio do project SERVER: 

npm install prisma --save-dev
npm i @prisma/client
npx prisma init

Mudar URL no file .env para a certa do postgreSQL e pronto conectou.


##########################################